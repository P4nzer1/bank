{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../core/services/products.service\";\nimport * as i3 from \"@angular/material/form-field\";\nimport * as i4 from \"@angular/material/select\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/material/button\";\nimport * as i8 from \"@angular/material/core\";\n\nfunction AccountRefillComponent_mat_option_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 7);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const account_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", account_r1.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate3(\" \", account_r1.id, \" \\u2014 \", account_r1.balance, \" \", account_r1.currency, \" \");\n  }\n}\n\nexport class AccountRefillComponent {\n  constructor(fb, productService) {\n    this.fb = fb;\n    this.productService = productService;\n    this.accounts$ = null; // Инициализация как Observable\n\n    this.loading = false;\n    this.refillForm = this.fb.group({\n      accountNumber: ['', Validators.required],\n      amount: ['', [Validators.required, Validators.min(1)]]\n    });\n  }\n\n  ngOnInit() {\n    // Получение списка счетов при загрузке компонента\n    this.accounts$ = this.productService.getAccounts(); // Привязываем к Observable\n\n    this.accounts$.subscribe(accounts => {\n      console.log('Список счетов:', accounts); // Выводим список счетов в консоль\n    });\n  }\n\n  onSubmit() {\n    var _a, _b;\n\n    if (this.refillForm.invalid) {\n      console.error('Форма заполнена неверно', this.refillForm);\n      return;\n    }\n\n    const accountNumber = (_a = this.refillForm.get('accountNumber')) === null || _a === void 0 ? void 0 : _a.value;\n    const amount = (_b = this.refillForm.get('amount')) === null || _b === void 0 ? void 0 : _b.value;\n    this.loading = true; // Логика отправки запроса на пополнение счета\n\n    console.log('Пополнение счета с accountId:', accountNumber, 'на сумму:', amount);\n  }\n\n}\n\nAccountRefillComponent.ɵfac = function AccountRefillComponent_Factory(t) {\n  return new (t || AccountRefillComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ProductsService));\n};\n\nAccountRefillComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AccountRefillComponent,\n  selectors: [[\"app-account-refill\"]],\n  decls: 14,\n  vars: 5,\n  consts: [[1, \"account-refill-container\"], [3, \"formGroup\", \"ngSubmit\"], [\"appearance\", \"outline\"], [\"formControlName\", \"accountNumber\", \"required\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"matInput\", \"\", \"type\", \"number\", \"formControlName\", \"amount\", \"placeholder\", \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0441\\u0443\\u043C\\u043C\\u0443\", \"required\", \"\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 3, \"disabled\"], [3, \"value\"]],\n  template: function AccountRefillComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelementStart(1, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function AccountRefillComponent_Template_form_ngSubmit_1_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(2, \"mat-form-field\", 2);\n      i0.ɵɵelementStart(3, \"mat-label\");\n      i0.ɵɵtext(4, \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0441\\u0447\\u0435\\u0442\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"mat-select\", 3);\n      i0.ɵɵtemplate(6, AccountRefillComponent_mat_option_6_Template, 2, 4, \"mat-option\", 4);\n      i0.ɵɵpipe(7, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"mat-form-field\", 2);\n      i0.ɵɵelementStart(9, \"mat-label\");\n      i0.ɵɵtext(10, \"\\u0421\\u0443\\u043C\\u043C\\u0430 \\u043F\\u043E\\u043F\\u043E\\u043B\\u043D\\u0435\\u043D\\u0438\\u044F\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"input\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"button\", 6);\n      i0.ɵɵtext(13, \" \\u041F\\u043E\\u043F\\u043E\\u043B\\u043D\\u0438\\u0442\\u044C \\u0441\\u0447\\u0435\\u0442 \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.refillForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(7, 3, ctx.accounts$));\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"disabled\", ctx.refillForm.invalid || ctx.loading);\n    }\n  },\n  directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i3.MatFormField, i3.MatLabel, i4.MatSelect, i1.NgControlStatus, i1.FormControlName, i1.RequiredValidator, i5.NgForOf, i6.MatInput, i1.NumberValueAccessor, i1.DefaultValueAccessor, i7.MatButton, i8.MatOption],\n  pipes: [i5.AsyncPipe],\n  styles: [\".account-refill-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  padding: 40px;\\n  background-color: #f9f9f9;\\n  border-radius: 8px;\\n}\\n.account-refill-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%] {\\n  max-width: 500px;\\n  width: 100%;\\n  display: flex;\\n  flex-direction: column;\\n  grid-gap: 20px;\\n  gap: 20px;\\n  background-color: #ff666b;\\n  padding: 30px;\\n  border-radius: 8px;\\n  box-shadow: 0px 8px 8px rgba(0, 0, 0, 0.1);\\n}\\n.account-refill-container[_ngcontent-%COMP%]   mat-form-field[_ngcontent-%COMP%] {\\n  width: 100%;\\n}\\n.account-refill-container[_ngcontent-%COMP%]   mat-form-field[_ngcontent-%COMP%]   mat-label[_ngcontent-%COMP%] {\\n  font-weight: 600;\\n}\\n.account-refill-container[_ngcontent-%COMP%]   mat-form-field[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\n  font-size: 16px;\\n}\\n.account-refill-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n  align-self: center;\\n  padding: 12px 30px;\\n  font-size: 16px;\\n  text-transform: uppercase;\\n  font-weight: bold;\\n  background-color: #007bff;\\n  color: white;\\n  border: none;\\n  border-radius: 4px;\\n  cursor: pointer;\\n}\\n.account-refill-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover {\\n  background-color: #0056b3;\\n}\\n.account-refill-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:disabled {\\n  background-color: #cccccc;\\n  cursor: not-allowed;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFjY291bnQtcmVmaWxsLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBQTtFQUNBLHVCQUFBO0VBQ0EsbUJBQUE7RUFDQSxhQUFBO0VBQ0EseUJBQUE7RUFDQSxrQkFBQTtBQUNGO0FBQ0U7RUFDRSxnQkFBQTtFQUNBLFdBQUE7RUFDQSxhQUFBO0VBQ0Esc0JBQUE7RUFDQSxjQUFBO0VBQUEsU0FBQTtFQUNBLHlCQUFBO0VBQ0EsYUFBQTtFQUNBLGtCQUFBO0VBQ0EsMENBQUE7QUFDSjtBQUVFO0VBQ0UsV0FBQTtBQUFKO0FBRUk7RUFDRSxnQkFBQTtBQUFOO0FBR0k7RUFDRSxlQUFBO0FBRE47QUFLRTtFQUNFLGtCQUFBO0VBQ0Esa0JBQUE7RUFDQSxlQUFBO0VBQ0EseUJBQUE7RUFDQSxpQkFBQTtFQUNBLHlCQUFBO0VBQ0EsWUFBQTtFQUNBLFlBQUE7RUFDQSxrQkFBQTtFQUNBLGVBQUE7QUFISjtBQUtJO0VBQ0UseUJBQUE7QUFITjtBQU1JO0VBQ0UseUJBQUE7RUFDQSxtQkFBQTtBQUpOIiwiZmlsZSI6ImFjY291bnQtcmVmaWxsLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmFjY291bnQtcmVmaWxsLWNvbnRhaW5lciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBwYWRkaW5nOiA0MHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjlmOWY5O1xuICBib3JkZXItcmFkaXVzOiA4cHg7XG5cbiAgZm9ybSB7XG4gICAgbWF4LXdpZHRoOiA1MDBweDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgZ2FwOiAyMHB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZjY2NmI7XG4gICAgcGFkZGluZzogMzBweDtcbiAgICBib3JkZXItcmFkaXVzOiA4cHg7XG4gICAgYm94LXNoYWRvdzogMHB4IDhweCA4cHggcmdiYSgwLCAwLCAwLCAwLjEpO1xuICB9XG5cbiAgbWF0LWZvcm0tZmllbGQge1xuICAgIHdpZHRoOiAxMDAlO1xuXG4gICAgbWF0LWxhYmVsIHtcbiAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XG4gICAgfVxuXG4gICAgaW5wdXQge1xuICAgICAgZm9udC1zaXplOiAxNnB4O1xuICAgIH1cbiAgfVxuXG4gIGJ1dHRvbiB7XG4gICAgYWxpZ24tc2VsZjogY2VudGVyO1xuICAgIHBhZGRpbmc6IDEycHggMzBweDtcbiAgICBmb250LXNpemU6IDE2cHg7XG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA3YmZmO1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICBib3JkZXI6IG5vbmU7XG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xuICAgIGN1cnNvcjogcG9pbnRlcjtcblxuICAgICY6aG92ZXIge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzAwNTZiMztcbiAgICB9XG5cbiAgICAmOmRpc2FibGVkIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNjY2NjY2M7XG4gICAgICBjdXJzb3I6IG5vdC1hbGxvd2VkO1xuICAgIH1cbiAgfVxufVxuXG4gICJdfQ== */\"]\n});","map":{"version":3,"sources":["/Users/nikitasmirnov/Desktop/bank/my-bank/src/app/modules/operations/account-refill/account-refill.component.ts"],"names":["Validators","i0","i1","i2","i3","i4","i5","i6","i7","i8","AccountRefillComponent_mat_option_6_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","account_r1","$implicit","ɵɵproperty","id","ɵɵadvance","ɵɵtextInterpolate3","balance","currency","AccountRefillComponent","constructor","fb","productService","accounts$","loading","refillForm","group","accountNumber","required","amount","min","ngOnInit","getAccounts","subscribe","accounts","console","log","onSubmit","_a","_b","invalid","error","get","value","ɵfac","AccountRefillComponent_Factory","t","ɵɵdirectiveInject","FormBuilder","ProductsService","ɵcmp","ɵɵdefineComponent","type","selectors","decls","vars","consts","template","AccountRefillComponent_Template","ɵɵlistener","AccountRefillComponent_Template_form_ngSubmit_1_listener","ɵɵtemplate","ɵɵpipe","ɵɵelement","ɵɵpipeBind1","directives","ɵNgNoValidate","NgControlStatusGroup","FormGroupDirective","MatFormField","MatLabel","MatSelect","NgControlStatus","FormControlName","RequiredValidator","NgForOf","MatInput","NumberValueAccessor","DefaultValueAccessor","MatButton","MatOption","pipes","AsyncPipe","styles"],"mappings":"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","sourcesContent":["import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../core/services/products.service\";\nimport * as i3 from \"@angular/material/form-field\";\nimport * as i4 from \"@angular/material/select\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/material/button\";\nimport * as i8 from \"@angular/material/core\";\nfunction AccountRefillComponent_mat_option_6_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 7);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const account_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", account_r1.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate3(\" \", account_r1.id, \" \\u2014 \", account_r1.balance, \" \", account_r1.currency, \" \");\n} }\nexport class AccountRefillComponent {\n    constructor(fb, productService) {\n        this.fb = fb;\n        this.productService = productService;\n        this.accounts$ = null; // Инициализация как Observable\n        this.loading = false;\n        this.refillForm = this.fb.group({\n            accountNumber: ['', Validators.required],\n            amount: ['', [Validators.required, Validators.min(1)]]\n        });\n    }\n    ngOnInit() {\n        // Получение списка счетов при загрузке компонента\n        this.accounts$ = this.productService.getAccounts(); // Привязываем к Observable\n        this.accounts$.subscribe(accounts => {\n            console.log('Список счетов:', accounts); // Выводим список счетов в консоль\n        });\n    }\n    onSubmit() {\n        var _a, _b;\n        if (this.refillForm.invalid) {\n            console.error('Форма заполнена неверно', this.refillForm);\n            return;\n        }\n        const accountNumber = (_a = this.refillForm.get('accountNumber')) === null || _a === void 0 ? void 0 : _a.value;\n        const amount = (_b = this.refillForm.get('amount')) === null || _b === void 0 ? void 0 : _b.value;\n        this.loading = true;\n        // Логика отправки запроса на пополнение счета\n        console.log('Пополнение счета с accountId:', accountNumber, 'на сумму:', amount);\n    }\n}\nAccountRefillComponent.ɵfac = function AccountRefillComponent_Factory(t) { return new (t || AccountRefillComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ProductsService)); };\nAccountRefillComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: AccountRefillComponent, selectors: [[\"app-account-refill\"]], decls: 14, vars: 5, consts: [[1, \"account-refill-container\"], [3, \"formGroup\", \"ngSubmit\"], [\"appearance\", \"outline\"], [\"formControlName\", \"accountNumber\", \"required\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"matInput\", \"\", \"type\", \"number\", \"formControlName\", \"amount\", \"placeholder\", \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0441\\u0443\\u043C\\u043C\\u0443\", \"required\", \"\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 3, \"disabled\"], [3, \"value\"]], template: function AccountRefillComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function AccountRefillComponent_Template_form_ngSubmit_1_listener() { return ctx.onSubmit(); });\n        i0.ɵɵelementStart(2, \"mat-form-field\", 2);\n        i0.ɵɵelementStart(3, \"mat-label\");\n        i0.ɵɵtext(4, \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0441\\u0447\\u0435\\u0442\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"mat-select\", 3);\n        i0.ɵɵtemplate(6, AccountRefillComponent_mat_option_6_Template, 2, 4, \"mat-option\", 4);\n        i0.ɵɵpipe(7, \"async\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"mat-form-field\", 2);\n        i0.ɵɵelementStart(9, \"mat-label\");\n        i0.ɵɵtext(10, \"\\u0421\\u0443\\u043C\\u043C\\u0430 \\u043F\\u043E\\u043F\\u043E\\u043B\\u043D\\u0435\\u043D\\u0438\\u044F\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"button\", 6);\n        i0.ɵɵtext(13, \" \\u041F\\u043E\\u043F\\u043E\\u043B\\u043D\\u0438\\u0442\\u044C \\u0441\\u0447\\u0435\\u0442 \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.refillForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(7, 3, ctx.accounts$));\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"disabled\", ctx.refillForm.invalid || ctx.loading);\n    } }, directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i3.MatFormField, i3.MatLabel, i4.MatSelect, i1.NgControlStatus, i1.FormControlName, i1.RequiredValidator, i5.NgForOf, i6.MatInput, i1.NumberValueAccessor, i1.DefaultValueAccessor, i7.MatButton, i8.MatOption], pipes: [i5.AsyncPipe], styles: [\".account-refill-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  padding: 40px;\\n  background-color: #f9f9f9;\\n  border-radius: 8px;\\n}\\n.account-refill-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%] {\\n  max-width: 500px;\\n  width: 100%;\\n  display: flex;\\n  flex-direction: column;\\n  grid-gap: 20px;\\n  gap: 20px;\\n  background-color: #ff666b;\\n  padding: 30px;\\n  border-radius: 8px;\\n  box-shadow: 0px 8px 8px rgba(0, 0, 0, 0.1);\\n}\\n.account-refill-container[_ngcontent-%COMP%]   mat-form-field[_ngcontent-%COMP%] {\\n  width: 100%;\\n}\\n.account-refill-container[_ngcontent-%COMP%]   mat-form-field[_ngcontent-%COMP%]   mat-label[_ngcontent-%COMP%] {\\n  font-weight: 600;\\n}\\n.account-refill-container[_ngcontent-%COMP%]   mat-form-field[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\n  font-size: 16px;\\n}\\n.account-refill-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n  align-self: center;\\n  padding: 12px 30px;\\n  font-size: 16px;\\n  text-transform: uppercase;\\n  font-weight: bold;\\n  background-color: #007bff;\\n  color: white;\\n  border: none;\\n  border-radius: 4px;\\n  cursor: pointer;\\n}\\n.account-refill-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover {\\n  background-color: #0056b3;\\n}\\n.account-refill-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:disabled {\\n  background-color: #cccccc;\\n  cursor: not-allowed;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFjY291bnQtcmVmaWxsLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBQTtFQUNBLHVCQUFBO0VBQ0EsbUJBQUE7RUFDQSxhQUFBO0VBQ0EseUJBQUE7RUFDQSxrQkFBQTtBQUNGO0FBQ0U7RUFDRSxnQkFBQTtFQUNBLFdBQUE7RUFDQSxhQUFBO0VBQ0Esc0JBQUE7RUFDQSxjQUFBO0VBQUEsU0FBQTtFQUNBLHlCQUFBO0VBQ0EsYUFBQTtFQUNBLGtCQUFBO0VBQ0EsMENBQUE7QUFDSjtBQUVFO0VBQ0UsV0FBQTtBQUFKO0FBRUk7RUFDRSxnQkFBQTtBQUFOO0FBR0k7RUFDRSxlQUFBO0FBRE47QUFLRTtFQUNFLGtCQUFBO0VBQ0Esa0JBQUE7RUFDQSxlQUFBO0VBQ0EseUJBQUE7RUFDQSxpQkFBQTtFQUNBLHlCQUFBO0VBQ0EsWUFBQTtFQUNBLFlBQUE7RUFDQSxrQkFBQTtFQUNBLGVBQUE7QUFISjtBQUtJO0VBQ0UseUJBQUE7QUFITjtBQU1JO0VBQ0UseUJBQUE7RUFDQSxtQkFBQTtBQUpOIiwiZmlsZSI6ImFjY291bnQtcmVmaWxsLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmFjY291bnQtcmVmaWxsLWNvbnRhaW5lciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBwYWRkaW5nOiA0MHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjlmOWY5O1xuICBib3JkZXItcmFkaXVzOiA4cHg7XG5cbiAgZm9ybSB7XG4gICAgbWF4LXdpZHRoOiA1MDBweDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgZ2FwOiAyMHB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZjY2NmI7XG4gICAgcGFkZGluZzogMzBweDtcbiAgICBib3JkZXItcmFkaXVzOiA4cHg7XG4gICAgYm94LXNoYWRvdzogMHB4IDhweCA4cHggcmdiYSgwLCAwLCAwLCAwLjEpO1xuICB9XG5cbiAgbWF0LWZvcm0tZmllbGQge1xuICAgIHdpZHRoOiAxMDAlO1xuXG4gICAgbWF0LWxhYmVsIHtcbiAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XG4gICAgfVxuXG4gICAgaW5wdXQge1xuICAgICAgZm9udC1zaXplOiAxNnB4O1xuICAgIH1cbiAgfVxuXG4gIGJ1dHRvbiB7XG4gICAgYWxpZ24tc2VsZjogY2VudGVyO1xuICAgIHBhZGRpbmc6IDEycHggMzBweDtcbiAgICBmb250LXNpemU6IDE2cHg7XG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA3YmZmO1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICBib3JkZXI6IG5vbmU7XG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xuICAgIGN1cnNvcjogcG9pbnRlcjtcblxuICAgICY6aG92ZXIge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzAwNTZiMztcbiAgICB9XG5cbiAgICAmOmRpc2FibGVkIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNjY2NjY2M7XG4gICAgICBjdXJzb3I6IG5vdC1hbGxvd2VkO1xuICAgIH1cbiAgfVxufVxuXG4gICJdfQ== */\"] });\n"]},"metadata":{},"sourceType":"module"}