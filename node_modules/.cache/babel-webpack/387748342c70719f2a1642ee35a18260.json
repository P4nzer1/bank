{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../core/services/account-operation.service\";\nimport * as i3 from \"../../core/services/products.service\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/select\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/material/input\";\nimport * as i8 from \"@angular/material/button\";\nimport * as i9 from \"@angular/material/core\";\n\nfunction AccountRefillComponent_mat_option_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 6);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const account_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", account_r1.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate3(\" \", account_r1.name, \" (\", account_r1.balance, \" \", account_r1.currency, \") \");\n  }\n}\n\nexport class AccountRefillComponent {\n  constructor(fb, accountOperationService, productsService) {\n    this.fb = fb;\n    this.accountOperationService = accountOperationService;\n    this.productsService = productsService;\n    this.loading = false;\n    this.errorMessage = ''; // Инициализация формы с валидаторами\n\n    this.refillForm = this.fb.group({\n      accountNumber: ['', Validators.required],\n      amount: ['', [Validators.required, Validators.min(1)]]\n    });\n  } // Обработка отправки формы\n\n\n  onSubmit() {\n    var _a, _b;\n\n    if (this.refillForm.invalid) {\n      console.error('Форма заполнена неверно', this.refillForm);\n      return;\n    } // Получаем номер счета и сумму из формы\n\n\n    const accountNumber = (_a = this.refillForm.get('accountNumber')) === null || _a === void 0 ? void 0 : _a.value;\n    const amount = (_b = this.refillForm.get('amount')) === null || _b === void 0 ? void 0 : _b.value;\n    this.loading = true; // Убедись, что номер счета передается правильно в идентификаторе \"accountId\"\n\n    const operationData = {\n      operationCode: 'AccountRefill',\n      parameters: [{\n        identifier: 'accountId',\n        value: accountNumber\n      }, {\n        identifier: 'amount',\n        value: amount\n      } // Передаем сумму\n      ]\n    };\n    this.accountOperationService.startOperation(operationData).subscribe({\n      next: response => {\n        console.log('Операция пополнения успешно начата', response);\n        this.loading = false; // Обновляем счета после успешной операции\n\n        this.productsService.getAccounts().subscribe();\n      },\n      error: error => {\n        console.error('Ошибка при пополнении счета', error);\n        this.errorMessage = 'Ошибка при пополнении счета';\n        this.loading = false;\n      }\n    });\n  }\n\n}\n\nAccountRefillComponent.ɵfac = function AccountRefillComponent_Factory(t) {\n  return new (t || AccountRefillComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AccountOperationService), i0.ɵɵdirectiveInject(i3.ProductsService));\n};\n\nAccountRefillComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AccountRefillComponent,\n  selectors: [[\"app-account-refill\"]],\n  decls: 13,\n  vars: 5,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [\"appearance\", \"outline\"], [\"formControlName\", \"accountNumber\", \"required\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"matInput\", \"\", \"type\", \"number\", \"formControlName\", \"amount\", \"placeholder\", \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0441\\u0443\\u043C\\u043C\\u0443\", \"required\", \"\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 3, \"disabled\"], [3, \"value\"]],\n  template: function AccountRefillComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function AccountRefillComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(1, \"mat-form-field\", 1);\n      i0.ɵɵelementStart(2, \"mat-label\");\n      i0.ɵɵtext(3, \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0441\\u0447\\u0435\\u0442 \\u0434\\u043B\\u044F \\u043F\\u043E\\u043F\\u043E\\u043B\\u043D\\u0435\\u043D\\u0438\\u044F\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"mat-select\", 2);\n      i0.ɵɵtemplate(5, AccountRefillComponent_mat_option_5_Template, 2, 4, \"mat-option\", 3);\n      i0.ɵɵpipe(6, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"mat-form-field\", 1);\n      i0.ɵɵelementStart(8, \"mat-label\");\n      i0.ɵɵtext(9, \"\\u0421\\u0443\\u043C\\u043C\\u0430 \\u043F\\u043E\\u043F\\u043E\\u043B\\u043D\\u0435\\u043D\\u0438\\u044F\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"button\", 5);\n      i0.ɵɵtext(12, \" \\u041F\\u043E\\u043F\\u043E\\u043B\\u043D\\u0438\\u0442\\u044C \\u0441\\u0447\\u0435\\u0442 \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.refillForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(6, 3, ctx.accounts$));\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"disabled\", ctx.refillForm.invalid || ctx.loading);\n    }\n  },\n  directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i4.MatFormField, i4.MatLabel, i5.MatSelect, i1.NgControlStatus, i1.FormControlName, i1.RequiredValidator, i6.NgForOf, i7.MatInput, i1.NumberValueAccessor, i1.DefaultValueAccessor, i8.MatButton, i9.MatOption],\n  pipes: [i6.AsyncPipe],\n  styles: [\".account-refill-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  padding: 40px;\\n  background-color: #f9f9f9;\\n  border-radius: 8px;\\n}\\n.account-refill-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%] {\\n  width: 100%;\\n  max-width: 500px;\\n  display: flex;\\n  flex-direction: column;\\n  grid-gap: 20px;\\n  gap: 20px;\\n  background-color: #ff6b6b;\\n  padding: 25px;\\n  border-radius: 8px;\\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\\n}\\n.account-refill-container[_ngcontent-%COMP%]   mat-form-field[_ngcontent-%COMP%] {\\n  width: 100%;\\n}\\n.account-refill-container[_ngcontent-%COMP%]   mat-form-field[_ngcontent-%COMP%]   mat-label[_ngcontent-%COMP%] {\\n  font-weight: 600;\\n}\\n.account-refill-container[_ngcontent-%COMP%]   mat-form-field[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\n  font-size: 16px;\\n}\\n.account-refill-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n  align-self: center;\\n  padding: 12px 30px;\\n  font-size: 16px;\\n  text-transform: uppercase;\\n  font-weight: bold;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFjY291bnQtcmVmaWxsLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksYUFBQTtFQUNBLHVCQUFBO0VBQ0EsbUJBQUE7RUFDQSxhQUFBO0VBQ0EseUJBQUE7RUFDQSxrQkFBQTtBQUNKO0FBQ0k7RUFDRSxXQUFBO0VBQ0EsZ0JBQUE7RUFDQSxhQUFBO0VBQ0Esc0JBQUE7RUFDQSxjQUFBO0VBQUEsU0FBQTtFQUNBLHlCQUFBO0VBQ0EsYUFBQTtFQUNBLGtCQUFBO0VBQ0Esd0NBQUE7QUFDTjtBQUVJO0VBQ0UsV0FBQTtBQUFOO0FBRU07RUFDRSxnQkFBQTtBQUFSO0FBR007RUFDRSxlQUFBO0FBRFI7QUFLSTtFQUNFLGtCQUFBO0VBQ0Esa0JBQUE7RUFDQSxlQUFBO0VBQ0EseUJBQUE7RUFDQSxpQkFBQTtBQUhOIiwiZmlsZSI6ImFjY291bnQtcmVmaWxsLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmFjY291bnQtcmVmaWxsLWNvbnRhaW5lciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIHBhZGRpbmc6IDQwcHg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2Y5ZjlmOTtcbiAgICBib3JkZXItcmFkaXVzOiA4cHg7XG4gIFxuICAgIGZvcm0ge1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBtYXgtd2lkdGg6IDUwMHB4O1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICBnYXA6IDIwcHg7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmY2YjZiO1xuICAgICAgcGFkZGluZzogMjVweDtcbiAgICAgIGJvcmRlci1yYWRpdXM6IDhweDtcbiAgICAgIGJveC1zaGFkb3c6IDAgNHB4IDhweCByZ2JhKDAsIDAsIDAsIDAuMSk7XG4gICAgfVxuICBcbiAgICBtYXQtZm9ybS1maWVsZCB7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgXG4gICAgICBtYXQtbGFiZWwge1xuICAgICAgICBmb250LXdlaWdodDogNjAwO1xuICAgICAgfVxuICBcbiAgICAgIGlucHV0IHtcbiAgICAgICAgZm9udC1zaXplOiAxNnB4O1xuICAgICAgfVxuICAgIH1cbiAgXG4gICAgYnV0dG9uIHtcbiAgICAgIGFsaWduLXNlbGY6IGNlbnRlcjtcbiAgICAgIHBhZGRpbmc6IDEycHggMzBweDtcbiAgICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICB9XG4gIH1cbiAgXG4gICJdfQ== */\"]\n});","map":{"version":3,"sources":["/Users/nikitasmirnov/Desktop/bank/my-bank/src/app/modules/operations/account-refill/account-refill.component.ts"],"names":["Validators","i0","i1","i2","i3","i4","i5","i6","i7","i8","i9","AccountRefillComponent_mat_option_5_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","account_r1","$implicit","ɵɵproperty","id","ɵɵadvance","ɵɵtextInterpolate3","name","balance","currency","AccountRefillComponent","constructor","fb","accountOperationService","productsService","loading","errorMessage","refillForm","group","accountNumber","required","amount","min","onSubmit","_a","_b","invalid","console","error","get","value","operationData","operationCode","parameters","identifier","startOperation","subscribe","next","response","log","getAccounts","ɵfac","AccountRefillComponent_Factory","t","ɵɵdirectiveInject","FormBuilder","AccountOperationService","ProductsService","ɵcmp","ɵɵdefineComponent","type","selectors","decls","vars","consts","template","AccountRefillComponent_Template","ɵɵlistener","AccountRefillComponent_Template_form_ngSubmit_0_listener","ɵɵtemplate","ɵɵpipe","ɵɵelement","ɵɵpipeBind1","accounts$","directives","ɵNgNoValidate","NgControlStatusGroup","FormGroupDirective","MatFormField","MatLabel","MatSelect","NgControlStatus","FormControlName","RequiredValidator","NgForOf","MatInput","NumberValueAccessor","DefaultValueAccessor","MatButton","MatOption","pipes","AsyncPipe","styles"],"mappings":"AAAA,SAASA,UAAT,QAA2B,gBAA3B;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,gBAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,+CAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,sCAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,8BAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,0BAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,iBAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,yBAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,0BAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,wBAApB;;AACA,SAASC,4CAAT,CAAsDC,EAAtD,EAA0DC,GAA1D,EAA+D;AAAE,MAAID,EAAE,GAAG,CAAT,EAAY;AACzEX,IAAAA,EAAE,CAACa,cAAH,CAAkB,CAAlB,EAAqB,YAArB,EAAmC,CAAnC;AACAb,IAAAA,EAAE,CAACc,MAAH,CAAU,CAAV;AACAd,IAAAA,EAAE,CAACe,YAAH;AACH;;AAAC,MAAIJ,EAAE,GAAG,CAAT,EAAY;AACV,UAAMK,UAAU,GAAGJ,GAAG,CAACK,SAAvB;AACAjB,IAAAA,EAAE,CAACkB,UAAH,CAAc,OAAd,EAAuBF,UAAU,CAACG,EAAlC;AACAnB,IAAAA,EAAE,CAACoB,SAAH,CAAa,CAAb;AACApB,IAAAA,EAAE,CAACqB,kBAAH,CAAsB,GAAtB,EAA2BL,UAAU,CAACM,IAAtC,EAA4C,IAA5C,EAAkDN,UAAU,CAACO,OAA7D,EAAsE,GAAtE,EAA2EP,UAAU,CAACQ,QAAtF,EAAgG,IAAhG;AACH;AAAE;;AACH,OAAO,MAAMC,sBAAN,CAA6B;AAChCC,EAAAA,WAAW,CAACC,EAAD,EAAKC,uBAAL,EAA8BC,eAA9B,EAA+C;AACtD,SAAKF,EAAL,GAAUA,EAAV;AACA,SAAKC,uBAAL,GAA+BA,uBAA/B;AACA,SAAKC,eAAL,GAAuBA,eAAvB;AACA,SAAKC,OAAL,GAAe,KAAf;AACA,SAAKC,YAAL,GAAoB,EAApB,CALsD,CAMtD;;AACA,SAAKC,UAAL,GAAkB,KAAKL,EAAL,CAAQM,KAAR,CAAc;AAC5BC,MAAAA,aAAa,EAAE,CAAC,EAAD,EAAKnC,UAAU,CAACoC,QAAhB,CADa;AAE5BC,MAAAA,MAAM,EAAE,CAAC,EAAD,EAAK,CAACrC,UAAU,CAACoC,QAAZ,EAAsBpC,UAAU,CAACsC,GAAX,CAAe,CAAf,CAAtB,CAAL;AAFoB,KAAd,CAAlB;AAIH,GAZ+B,CAahC;;;AACAC,EAAAA,QAAQ,GAAG;AACP,QAAIC,EAAJ,EAAQC,EAAR;;AACA,QAAI,KAAKR,UAAL,CAAgBS,OAApB,EAA6B;AACzBC,MAAAA,OAAO,CAACC,KAAR,CAAc,yBAAd,EAAyC,KAAKX,UAA9C;AACA;AACH,KALM,CAMP;;;AACA,UAAME,aAAa,GAAG,CAACK,EAAE,GAAG,KAAKP,UAAL,CAAgBY,GAAhB,CAAoB,eAApB,CAAN,MAAgD,IAAhD,IAAwDL,EAAE,KAAK,KAAK,CAApE,GAAwE,KAAK,CAA7E,GAAiFA,EAAE,CAACM,KAA1G;AACA,UAAMT,MAAM,GAAG,CAACI,EAAE,GAAG,KAAKR,UAAL,CAAgBY,GAAhB,CAAoB,QAApB,CAAN,MAAyC,IAAzC,IAAiDJ,EAAE,KAAK,KAAK,CAA7D,GAAiE,KAAK,CAAtE,GAA0EA,EAAE,CAACK,KAA5F;AACA,SAAKf,OAAL,GAAe,IAAf,CATO,CAUP;;AACA,UAAMgB,aAAa,GAAG;AAClBC,MAAAA,aAAa,EAAE,eADG;AAElBC,MAAAA,UAAU,EAAE,CACR;AAAEC,QAAAA,UAAU,EAAE,WAAd;AAA2BJ,QAAAA,KAAK,EAAEX;AAAlC,OADQ,EAER;AAAEe,QAAAA,UAAU,EAAE,QAAd;AAAwBJ,QAAAA,KAAK,EAAET;AAA/B,OAFQ,CAEgC;AAFhC;AAFM,KAAtB;AAOA,SAAKR,uBAAL,CAA6BsB,cAA7B,CAA4CJ,aAA5C,EAA2DK,SAA3D,CAAqE;AACjEC,MAAAA,IAAI,EAAGC,QAAD,IAAc;AAChBX,QAAAA,OAAO,CAACY,GAAR,CAAY,oCAAZ,EAAkDD,QAAlD;AACA,aAAKvB,OAAL,GAAe,KAAf,CAFgB,CAGhB;;AACA,aAAKD,eAAL,CAAqB0B,WAArB,GAAmCJ,SAAnC;AACH,OANgE;AAOjER,MAAAA,KAAK,EAAGA,KAAD,IAAW;AACdD,QAAAA,OAAO,CAACC,KAAR,CAAc,6BAAd,EAA6CA,KAA7C;AACA,aAAKZ,YAAL,GAAoB,6BAApB;AACA,aAAKD,OAAL,GAAe,KAAf;AACH;AAXgE,KAArE;AAaH;;AA7C+B;;AA+CpCL,sBAAsB,CAAC+B,IAAvB,GAA8B,SAASC,8BAAT,CAAwCC,CAAxC,EAA2C;AAAE,SAAO,KAAKA,CAAC,IAAIjC,sBAAV,EAAkCzB,EAAE,CAAC2D,iBAAH,CAAqB1D,EAAE,CAAC2D,WAAxB,CAAlC,EAAwE5D,EAAE,CAAC2D,iBAAH,CAAqBzD,EAAE,CAAC2D,uBAAxB,CAAxE,EAA0H7D,EAAE,CAAC2D,iBAAH,CAAqBxD,EAAE,CAAC2D,eAAxB,CAA1H,CAAP;AAA6K,CAAxP;;AACArC,sBAAsB,CAACsC,IAAvB,GAA8B,aAAc/D,EAAE,CAACgE,iBAAH,CAAqB;AAAEC,EAAAA,IAAI,EAAExC,sBAAR;AAAgCyC,EAAAA,SAAS,EAAE,CAAC,CAAC,oBAAD,CAAD,CAA3C;AAAqEC,EAAAA,KAAK,EAAE,EAA5E;AAAgFC,EAAAA,IAAI,EAAE,CAAtF;AAAyFC,EAAAA,MAAM,EAAE,CAAC,CAAC,CAAD,EAAI,WAAJ,EAAiB,UAAjB,CAAD,EAA+B,CAAC,YAAD,EAAe,SAAf,CAA/B,EAA0D,CAAC,iBAAD,EAAoB,eAApB,EAAqC,UAArC,EAAiD,EAAjD,CAA1D,EAAgH,CAAC,CAAD,EAAI,OAAJ,EAAa,CAAb,EAAgB,OAAhB,EAAyB,SAAzB,CAAhH,EAAqJ,CAAC,UAAD,EAAa,EAAb,EAAiB,MAAjB,EAAyB,QAAzB,EAAmC,iBAAnC,EAAsD,QAAtD,EAAgE,aAAhE,EAA+E,2EAA/E,EAA4J,UAA5J,EAAwK,EAAxK,CAArJ,EAAkU,CAAC,mBAAD,EAAsB,EAAtB,EAA0B,OAA1B,EAAmC,SAAnC,EAA8C,MAA9C,EAAsD,QAAtD,EAAgE,CAAhE,EAAmE,UAAnE,CAAlU,EAAkZ,CAAC,CAAD,EAAI,OAAJ,CAAlZ,CAAjG;AAAkgBC,EAAAA,QAAQ,EAAE,SAASC,+BAAT,CAAyC5D,EAAzC,EAA6CC,GAA7C,EAAkD;AAAE,QAAID,EAAE,GAAG,CAAT,EAAY;AACroBX,MAAAA,EAAE,CAACa,cAAH,CAAkB,CAAlB,EAAqB,MAArB,EAA6B,CAA7B;AACAb,MAAAA,EAAE,CAACwE,UAAH,CAAc,UAAd,EAA0B,SAASC,wDAAT,GAAoE;AAAE,eAAO7D,GAAG,CAAC0B,QAAJ,EAAP;AAAwB,OAAxH;AACAtC,MAAAA,EAAE,CAACa,cAAH,CAAkB,CAAlB,EAAqB,gBAArB,EAAuC,CAAvC;AACAb,MAAAA,EAAE,CAACa,cAAH,CAAkB,CAAlB,EAAqB,WAArB;AACAb,MAAAA,EAAE,CAACc,MAAH,CAAU,CAAV,EAAa,2JAAb;AACAd,MAAAA,EAAE,CAACe,YAAH;AACAf,MAAAA,EAAE,CAACa,cAAH,CAAkB,CAAlB,EAAqB,YAArB,EAAmC,CAAnC;AACAb,MAAAA,EAAE,CAAC0E,UAAH,CAAc,CAAd,EAAiBhE,4CAAjB,EAA+D,CAA/D,EAAkE,CAAlE,EAAqE,YAArE,EAAmF,CAAnF;AACAV,MAAAA,EAAE,CAAC2E,MAAH,CAAU,CAAV,EAAa,OAAb;AACA3E,MAAAA,EAAE,CAACe,YAAH;AACAf,MAAAA,EAAE,CAACe,YAAH;AACAf,MAAAA,EAAE,CAACa,cAAH,CAAkB,CAAlB,EAAqB,gBAArB,EAAuC,CAAvC;AACAb,MAAAA,EAAE,CAACa,cAAH,CAAkB,CAAlB,EAAqB,WAArB;AACAb,MAAAA,EAAE,CAACc,MAAH,CAAU,CAAV,EAAa,6FAAb;AACAd,MAAAA,EAAE,CAACe,YAAH;AACAf,MAAAA,EAAE,CAAC4E,SAAH,CAAa,EAAb,EAAiB,OAAjB,EAA0B,CAA1B;AACA5E,MAAAA,EAAE,CAACe,YAAH;AACAf,MAAAA,EAAE,CAACa,cAAH,CAAkB,EAAlB,EAAsB,QAAtB,EAAgC,CAAhC;AACAb,MAAAA,EAAE,CAACc,MAAH,CAAU,EAAV,EAAc,mFAAd;AACAd,MAAAA,EAAE,CAACe,YAAH;AACAf,MAAAA,EAAE,CAACe,YAAH;AACH;;AAAC,QAAIJ,EAAE,GAAG,CAAT,EAAY;AACVX,MAAAA,EAAE,CAACkB,UAAH,CAAc,WAAd,EAA2BN,GAAG,CAACoB,UAA/B;AACAhC,MAAAA,EAAE,CAACoB,SAAH,CAAa,CAAb;AACApB,MAAAA,EAAE,CAACkB,UAAH,CAAc,SAAd,EAAyBlB,EAAE,CAAC6E,WAAH,CAAe,CAAf,EAAkB,CAAlB,EAAqBjE,GAAG,CAACkE,SAAzB,CAAzB;AACA9E,MAAAA,EAAE,CAACoB,SAAH,CAAa,CAAb;AACApB,MAAAA,EAAE,CAACkB,UAAH,CAAc,UAAd,EAA0BN,GAAG,CAACoB,UAAJ,CAAeS,OAAf,IAA0B7B,GAAG,CAACkB,OAAxD;AACH;AAAE,GA5B0D;AA4BxDiD,EAAAA,UAAU,EAAE,CAAC9E,EAAE,CAAC+E,aAAJ,EAAmB/E,EAAE,CAACgF,oBAAtB,EAA4ChF,EAAE,CAACiF,kBAA/C,EAAmE9E,EAAE,CAAC+E,YAAtE,EAAoF/E,EAAE,CAACgF,QAAvF,EAAiG/E,EAAE,CAACgF,SAApG,EAA+GpF,EAAE,CAACqF,eAAlH,EAAmIrF,EAAE,CAACsF,eAAtI,EAAuJtF,EAAE,CAACuF,iBAA1J,EAA6KlF,EAAE,CAACmF,OAAhL,EAAyLlF,EAAE,CAACmF,QAA5L,EAAsMzF,EAAE,CAAC0F,mBAAzM,EAA8N1F,EAAE,CAAC2F,oBAAjO,EAAuPpF,EAAE,CAACqF,SAA1P,EAAqQpF,EAAE,CAACqF,SAAxQ,CA5B4C;AA4BwOC,EAAAA,KAAK,EAAE,CAACzF,EAAE,CAAC0F,SAAJ,CA5B/O;AA4B+PC,EAAAA,MAAM,EAAE,CAAC,4uFAAD;AA5BvQ,CAArB,CAA5C","sourcesContent":["import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../core/services/account-operation.service\";\nimport * as i3 from \"../../core/services/products.service\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/select\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/material/input\";\nimport * as i8 from \"@angular/material/button\";\nimport * as i9 from \"@angular/material/core\";\nfunction AccountRefillComponent_mat_option_5_Template(rf, ctx) { if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 6);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n} if (rf & 2) {\n    const account_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", account_r1.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate3(\" \", account_r1.name, \" (\", account_r1.balance, \" \", account_r1.currency, \") \");\n} }\nexport class AccountRefillComponent {\n    constructor(fb, accountOperationService, productsService) {\n        this.fb = fb;\n        this.accountOperationService = accountOperationService;\n        this.productsService = productsService;\n        this.loading = false;\n        this.errorMessage = '';\n        // Инициализация формы с валидаторами\n        this.refillForm = this.fb.group({\n            accountNumber: ['', Validators.required],\n            amount: ['', [Validators.required, Validators.min(1)]]\n        });\n    }\n    // Обработка отправки формы\n    onSubmit() {\n        var _a, _b;\n        if (this.refillForm.invalid) {\n            console.error('Форма заполнена неверно', this.refillForm);\n            return;\n        }\n        // Получаем номер счета и сумму из формы\n        const accountNumber = (_a = this.refillForm.get('accountNumber')) === null || _a === void 0 ? void 0 : _a.value;\n        const amount = (_b = this.refillForm.get('amount')) === null || _b === void 0 ? void 0 : _b.value;\n        this.loading = true;\n        // Убедись, что номер счета передается правильно в идентификаторе \"accountId\"\n        const operationData = {\n            operationCode: 'AccountRefill',\n            parameters: [\n                { identifier: 'accountId', value: accountNumber },\n                { identifier: 'amount', value: amount } // Передаем сумму\n            ]\n        };\n        this.accountOperationService.startOperation(operationData).subscribe({\n            next: (response) => {\n                console.log('Операция пополнения успешно начата', response);\n                this.loading = false;\n                // Обновляем счета после успешной операции\n                this.productsService.getAccounts().subscribe();\n            },\n            error: (error) => {\n                console.error('Ошибка при пополнении счета', error);\n                this.errorMessage = 'Ошибка при пополнении счета';\n                this.loading = false;\n            }\n        });\n    }\n}\nAccountRefillComponent.ɵfac = function AccountRefillComponent_Factory(t) { return new (t || AccountRefillComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AccountOperationService), i0.ɵɵdirectiveInject(i3.ProductsService)); };\nAccountRefillComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: AccountRefillComponent, selectors: [[\"app-account-refill\"]], decls: 13, vars: 5, consts: [[3, \"formGroup\", \"ngSubmit\"], [\"appearance\", \"outline\"], [\"formControlName\", \"accountNumber\", \"required\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"matInput\", \"\", \"type\", \"number\", \"formControlName\", \"amount\", \"placeholder\", \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0441\\u0443\\u043C\\u043C\\u0443\", \"required\", \"\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 3, \"disabled\"], [3, \"value\"]], template: function AccountRefillComponent_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function AccountRefillComponent_Template_form_ngSubmit_0_listener() { return ctx.onSubmit(); });\n        i0.ɵɵelementStart(1, \"mat-form-field\", 1);\n        i0.ɵɵelementStart(2, \"mat-label\");\n        i0.ɵɵtext(3, \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0441\\u0447\\u0435\\u0442 \\u0434\\u043B\\u044F \\u043F\\u043E\\u043F\\u043E\\u043B\\u043D\\u0435\\u043D\\u0438\\u044F\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"mat-select\", 2);\n        i0.ɵɵtemplate(5, AccountRefillComponent_mat_option_5_Template, 2, 4, \"mat-option\", 3);\n        i0.ɵɵpipe(6, \"async\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"mat-form-field\", 1);\n        i0.ɵɵelementStart(8, \"mat-label\");\n        i0.ɵɵtext(9, \"\\u0421\\u0443\\u043C\\u043C\\u0430 \\u043F\\u043E\\u043F\\u043E\\u043B\\u043D\\u0435\\u043D\\u0438\\u044F\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"input\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"button\", 5);\n        i0.ɵɵtext(12, \" \\u041F\\u043E\\u043F\\u043E\\u043B\\u043D\\u0438\\u0442\\u044C \\u0441\\u0447\\u0435\\u0442 \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.refillForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(6, 3, ctx.accounts$));\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"disabled\", ctx.refillForm.invalid || ctx.loading);\n    } }, directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i4.MatFormField, i4.MatLabel, i5.MatSelect, i1.NgControlStatus, i1.FormControlName, i1.RequiredValidator, i6.NgForOf, i7.MatInput, i1.NumberValueAccessor, i1.DefaultValueAccessor, i8.MatButton, i9.MatOption], pipes: [i6.AsyncPipe], styles: [\".account-refill-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  padding: 40px;\\n  background-color: #f9f9f9;\\n  border-radius: 8px;\\n}\\n.account-refill-container[_ngcontent-%COMP%]   form[_ngcontent-%COMP%] {\\n  width: 100%;\\n  max-width: 500px;\\n  display: flex;\\n  flex-direction: column;\\n  grid-gap: 20px;\\n  gap: 20px;\\n  background-color: #ff6b6b;\\n  padding: 25px;\\n  border-radius: 8px;\\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\\n}\\n.account-refill-container[_ngcontent-%COMP%]   mat-form-field[_ngcontent-%COMP%] {\\n  width: 100%;\\n}\\n.account-refill-container[_ngcontent-%COMP%]   mat-form-field[_ngcontent-%COMP%]   mat-label[_ngcontent-%COMP%] {\\n  font-weight: 600;\\n}\\n.account-refill-container[_ngcontent-%COMP%]   mat-form-field[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\n  font-size: 16px;\\n}\\n.account-refill-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n  align-self: center;\\n  padding: 12px 30px;\\n  font-size: 16px;\\n  text-transform: uppercase;\\n  font-weight: bold;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFjY291bnQtcmVmaWxsLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksYUFBQTtFQUNBLHVCQUFBO0VBQ0EsbUJBQUE7RUFDQSxhQUFBO0VBQ0EseUJBQUE7RUFDQSxrQkFBQTtBQUNKO0FBQ0k7RUFDRSxXQUFBO0VBQ0EsZ0JBQUE7RUFDQSxhQUFBO0VBQ0Esc0JBQUE7RUFDQSxjQUFBO0VBQUEsU0FBQTtFQUNBLHlCQUFBO0VBQ0EsYUFBQTtFQUNBLGtCQUFBO0VBQ0Esd0NBQUE7QUFDTjtBQUVJO0VBQ0UsV0FBQTtBQUFOO0FBRU07RUFDRSxnQkFBQTtBQUFSO0FBR007RUFDRSxlQUFBO0FBRFI7QUFLSTtFQUNFLGtCQUFBO0VBQ0Esa0JBQUE7RUFDQSxlQUFBO0VBQ0EseUJBQUE7RUFDQSxpQkFBQTtBQUhOIiwiZmlsZSI6ImFjY291bnQtcmVmaWxsLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmFjY291bnQtcmVmaWxsLWNvbnRhaW5lciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIHBhZGRpbmc6IDQwcHg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2Y5ZjlmOTtcbiAgICBib3JkZXItcmFkaXVzOiA4cHg7XG4gIFxuICAgIGZvcm0ge1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBtYXgtd2lkdGg6IDUwMHB4O1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICBnYXA6IDIwcHg7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmY2YjZiO1xuICAgICAgcGFkZGluZzogMjVweDtcbiAgICAgIGJvcmRlci1yYWRpdXM6IDhweDtcbiAgICAgIGJveC1zaGFkb3c6IDAgNHB4IDhweCByZ2JhKDAsIDAsIDAsIDAuMSk7XG4gICAgfVxuICBcbiAgICBtYXQtZm9ybS1maWVsZCB7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgXG4gICAgICBtYXQtbGFiZWwge1xuICAgICAgICBmb250LXdlaWdodDogNjAwO1xuICAgICAgfVxuICBcbiAgICAgIGlucHV0IHtcbiAgICAgICAgZm9udC1zaXplOiAxNnB4O1xuICAgICAgfVxuICAgIH1cbiAgXG4gICAgYnV0dG9uIHtcbiAgICAgIGFsaWduLXNlbGY6IGNlbnRlcjtcbiAgICAgIHBhZGRpbmc6IDEycHggMzBweDtcbiAgICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICB9XG4gIH1cbiAgXG4gICJdfQ== */\"] });\n"]},"metadata":{},"sourceType":"module"}